generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Typhoon {
  typhoon_id         String                 @id @db.VarChar(100)
  gdacs_id           Int?                   @unique
  aerisweather_id    String?                @unique
  name               String                 @unique @db.VarChar(30)
  start_date         DateTime
  end_date           DateTime?
  created_at         DateTime               @default(now())
  updated_at         DateTime               @default(now()) @updatedAt
  aerisweather_name  String?                @db.VarChar(30)
  gdacs_name         String?                @db.VarChar(30)
  around_weathers_circle    TyphoonAroundWeatherCircle[]
  around_weathers_grid    TyphoonAroundWeatherGrid[]
  historical_details TyphoonDetail[]

  @@map("typhoons")
}

model TyphoonDetail {
  typhoon_id         String                 @db.VarChar(100)
  observation_date   DateTime
  central_longitude  Float
  central_latitude   Float
  central_pressure   Float
  wind_radius        Float?
  grade              Int?
  grade_type         GRADE_TYPE?
  created_at         DateTime               @default(now())
  updated_at         DateTime               @default(now()) @updatedAt
  maximum_wind_speed Float
  se_long_34         Float?
  se_lat_34          Float?
  se_distance_34     Float?
  sw_long_34         Float?
  sw_lat_34          Float?
  sw_distance_34     Float?
  ne_long_34         Float?
  ne_lat_34          Float?
  ne_distance_34     Float?
  nw_long_34         Float?
  nw_lat_34          Float?
  nw_distance_34     Float?
  se_long_50         Float?
  se_lat_50          Float?
  se_distance_50     Float?
  sw_long_50         Float?
  sw_lat_50          Float?
  sw_distance_50     Float?
  ne_long_50         Float?
  ne_lat_50          Float?
  ne_distance_50     Float?
  nw_long_50         Float?
  nw_lat_50          Float?
  nw_distance_50     Float?
  se_long_64         Float?
  se_lat_64          Float?
  se_distance_64     Float?
  sw_long_64         Float?
  sw_lat_64          Float?
  sw_distance_64     Float?
  ne_long_64         Float?
  ne_lat_64          Float?
  ne_distance_64     Float?
  nw_long_64         Float?
  nw_lat_64          Float?
  nw_distance_64     Float?
  source             SOURCE                 @default(GDACS)
  around_weathers_circle    TyphoonAroundWeatherCircle[]
  around_weathers_grid    TyphoonAroundWeatherGrid[]
  typhoon            Typhoon                @relation(fields: [typhoon_id], references: [typhoon_id])
  predictions         TyphoonPrediction[]

  @@id([typhoon_id, observation_date])
  @@map("typhoon_details")
}

model TyphoonAroundWeatherCircle {
  typhoon_id               String        @db.VarChar(100)
  observation_date         DateTime
  point                    Int
  distance                 Int
  temperature_2m           Float?
  relativehumidity_2m      Float?
  apparent_temperature     Float?
  pressure_msl             Float?
  cloudcover               Float?
  cloudcover_low           Float?
  cloudcover_mid           Float?
  direct_normal_irradiance Float?
  windspeed_10m            Float?
  windspeed_100m           Float?
  winddirection_10m        Float?
  winddirection_100m       Float?
  windgusts_10m            Float?
  created_at               DateTime      @default(now())
  updated_at               DateTime      @default(now()) @updatedAt
  typhoon                  Typhoon       @relation(fields: [typhoon_id], references: [typhoon_id])
  typhoon_detail           TyphoonDetail @relation(fields: [typhoon_id, observation_date], references: [typhoon_id, observation_date])

  @@id([typhoon_id, observation_date, point,distance])
  @@map("typhoon_around_weathers_circle")
}
model TyphoonAroundWeatherGrid {
  typhoon_id               String        @db.VarChar(100)
  observation_date         DateTime
  x                    Int
  y                 Int
  temperature_2m           Float?
  relativehumidity_2m      Float?
  apparent_temperature     Float?
  pressure_msl             Float?
  cloudcover               Float?
  cloudcover_low           Float?
  cloudcover_mid           Float?
  direct_normal_irradiance Float?
  windspeed_10m            Float?
  windspeed_100m           Float?
  winddirection_10m        Float?
  winddirection_100m       Float?
  windgusts_10m            Float?
  created_at               DateTime      @default(now())
  updated_at               DateTime      @default(now()) @updatedAt
  typhoon                  Typhoon       @relation(fields: [typhoon_id], references: [typhoon_id])
  typhoon_detail           TyphoonDetail @relation(fields: [typhoon_id, observation_date], references: [typhoon_id, observation_date])

  @@id([typhoon_id, observation_date, x,y])
  @@map("typhoon_around_weathers_grid")
}

model TyphoonPrediction {
  typhoon_id         String        @db.VarChar(100)
  observation_date   DateTime
  prediction_date    DateTime
  central_longitude  Float
  central_latitude   Float
  central_pressure   Float?
  maximum_wind_speed Float?
  grade              GRADE_TYPE?
  detail             TyphoonDetail @relation(fields: [typhoon_id, observation_date], references: [typhoon_id, observation_date])
  
  @@id([typhoon_id, observation_date, prediction_date])
  @@map("typhoon_predictions")
}

enum GRADE_TYPE {
  TD
  TS
  H1
  H2
  H3
  H4
  H5
  TY
  STY
}

enum SOURCE {
  GDACS
  AERISWEATHER
}
